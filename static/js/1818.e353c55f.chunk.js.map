{"version":3,"file":"static/js/1818.e353c55f.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/core/render/patterns/LinePattern.ts","components/StructureChart.tsx"],"sourcesContent":["import { Pattern, IPatternSettings, IPatternPrivate } from \"./Pattern\";\nimport * as $type from \"../../util//Type\";\n\nexport interface ILinePatternSettings extends IPatternSettings {\n\n\t/**\n\t * Gap between  lines, in pixels.\n\t *\n\t * @default 6\n\t */\n\tgap?: number;\n\n}\n\nexport interface ILinePatternPrivate extends IPatternPrivate {\n}\n\n/**\n * Line pattern.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n */\nexport class LinePattern extends Pattern {\n\n\tdeclare public _settings: ILinePatternSettings;\n\tdeclare public _privateSettings: ILinePatternPrivate;\n\n\tpublic static className: string = \"LinePattern\";\n\tpublic static classNames: Array<string> = Pattern.classNames.concat([LinePattern.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"gap\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tprotected _draw() {\n\t\tsuper._draw();\n\n\t\tconst w = this.get(\"width\", 100);\n\t\tconst h = this.get(\"height\", 100);\n\t\tconst gap = this.get(\"gap\", 0);\n\t\tconst strokeWidth = this.get(\"strokeWidth\", 1);\n\n\t\tif (!gap) {\n\t\t\tthis._display.moveTo(0, 0);\n\t\t\tthis._display.lineTo(w, 0);\n\t\t}\n\t\telse {\n\t\t\tlet step = gap + strokeWidth;\n\t\t\tlet count = h / step;\n\n\t\t\tfor (let i = -count; i < count * 2; i++) {\n\t\t\t\tconst y = Math.round(i * step - step / 2) + 0.5;\n\t\t\t\tthis._display.moveTo(-w, y);\n\t\t\t\tthis._display.lineTo(w * 2, y);\n\t\t\t}\n\t\t}\n\n\t\tthis._display.lineStyle(strokeWidth, this.get(\"color\"), this.get(\"colorOpacity\"));\n\n\t\tlet strokeDasharray = this.get(\"strokeDasharray\");\n\t\tif ($type.isNumber(strokeDasharray)) {\n\t\t\tif (strokeDasharray < 0.5) {\n\t\t\t\tstrokeDasharray = [0];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstrokeDasharray = [strokeDasharray]\n\t\t\t}\n\t\t}\n\t\tthis._display.setLineDash(strokeDasharray as number[]);\n\n\t\tconst strokeDashoffset = this.get(\"strokeDashoffset\");\n\t\tif (strokeDashoffset) {\n\t\t\tthis._display.setLineDashOffset(strokeDashoffset);\n\t\t}\n\n\t\tthis._display.endStroke();\n\t}\n}\n","import { useEffect, useRef, useState, memo } from 'react';\r\nimport { structureLayer } from '../layers';\r\nimport { view } from '../Scene';\r\nimport FeatureFilter from '@arcgis/core/layers/support/FeatureFilter';\r\nimport Query from '@arcgis/core/rest/support/Query';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport * as am5percent from '@amcharts/amcharts5/percent';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport {\r\n  generateStrucMoaData,\r\n  generateStrucNumber,\r\n  generateStructureData,\r\n  thousands_separators,\r\n  statusStructureChartQuery,\r\n  statusMoaStructureChartQuery,\r\n} from '../Query';\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\n\r\n///*** Others */\r\n\r\n/// Draw chart\r\nconst StructureChart = memo(({ contractp, landtype, landsection, typelist }: any) => {\r\n  // 1. Structure\r\n  const pieSeriesRef = useRef<unknown | any | undefined>({});\r\n  const legendRef = useRef<unknown | any | undefined>({});\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [structureData, setStructureData] = useState([\r\n    {\r\n      category: String,\r\n      value: Number,\r\n    },\r\n  ]);\r\n\r\n  const chartID = 'structure-chart';\r\n  const [structureNumber, setStructureNumber] = useState([]);\r\n\r\n  // 2.Mode of Acquisition\r\n  const barSeriesRef = useRef<unknown | any | undefined>({});\r\n  const yAxisRef = useRef<unknown | any | undefined>({});\r\n  const chartRef_moa = useRef<unknown | any | undefined>({});\r\n  const [structureMoaData, setStructureMoaData] = useState([\r\n    {\r\n      category: String,\r\n      value: Number,\r\n    },\r\n  ]);\r\n  const chartID_moa = 'structure-moa';\r\n\r\n  // Query\r\n  // Query\r\n  const qCP = \"Package = '\" + contractp + \"'\";\r\n  const qLandType = \"Type = '\" + landtype + \"'\";\r\n  const qCpLandType = qCP + ' AND ' + qLandType;\r\n  const qLandSection = \"Station1 ='\" + landsection + \"'\";\r\n  const qCpLandTypeSection = qCpLandType + ' AND ' + qLandSection;\r\n\r\n  if (!contractp) {\r\n    structureLayer.definitionExpression = '1=1';\r\n  } else if (contractp && !landtype && !landsection) {\r\n    structureLayer.definitionExpression = qCP;\r\n  } else if (contractp && landtype && !landsection) {\r\n    structureLayer.definitionExpression = qCpLandType;\r\n  } else {\r\n    structureLayer.definitionExpression = qCpLandTypeSection;\r\n  }\r\n\r\n  useEffect(() => {\r\n    generateStructureData().then((result: any) => {\r\n      setStructureData(result);\r\n    });\r\n\r\n    // Structure Number\r\n    generateStrucNumber().then((response: any) => {\r\n      setStructureNumber(response);\r\n    });\r\n\r\n    generateStrucMoaData().then((response: any) => {\r\n      setStructureMoaData(response);\r\n    });\r\n  }, [contractp, landtype, landsection]);\r\n\r\n  useEffect(() => {\r\n    class MyTheme extends am5.Theme {\r\n      patterns: am5.LinePattern[] | undefined | any;\r\n      currentPattern: number | any | undefined;\r\n      setupDefaultRules() {\r\n        var theme = this;\r\n\r\n        const gap = 4;\r\n        const rotation = 135;\r\n        const strokeWidth = 1.1;\r\n        const fillOpacity = 0;\r\n        const width = 10;\r\n        const height = 10;\r\n\r\n        this.patterns = [\r\n          am5.LinePattern.new(this._root, {\r\n            color: am5.color('#70AD47'),\r\n            gap: gap,\r\n            rotation: rotation,\r\n            strokeWidth: strokeWidth,\r\n            fillOpacity: fillOpacity,\r\n            width: width,\r\n            height: height,\r\n          }),\r\n\r\n          am5.LinePattern.new(this._root, {\r\n            color: am5.color('#0070FF'),\r\n            gap: gap,\r\n            rotation: rotation,\r\n            strokeWidth: strokeWidth,\r\n            fillOpacity: fillOpacity,\r\n            width: width,\r\n            height: height,\r\n          }),\r\n\r\n          am5.LinePattern.new(this._root, {\r\n            color: am5.color('#FFFF00'),\r\n            gap: gap,\r\n            rotation: rotation,\r\n            strokeWidth: strokeWidth,\r\n            fillOpacity: fillOpacity,\r\n            width: width,\r\n            height: height,\r\n          }),\r\n\r\n          am5.LinePattern.new(this._root, {\r\n            color: am5.color('#FFAA00'),\r\n            gap: gap,\r\n            rotation: rotation,\r\n            strokeWidth: strokeWidth,\r\n            fillOpacity: fillOpacity,\r\n            width: width,\r\n            height: height,\r\n          }),\r\n          am5.LinePattern.new(this._root, {\r\n            color: am5.color('#FF0000'),\r\n            gap: gap,\r\n            rotation: rotation,\r\n            strokeWidth: strokeWidth,\r\n            fillOpacity: fillOpacity,\r\n            width: width,\r\n            height: height,\r\n          }),\r\n\r\n          am5.LinePattern.new(this._root, {\r\n            color: am5.color('#00734C'),\r\n            gap: gap,\r\n            rotation: rotation,\r\n            strokeWidth: strokeWidth,\r\n            fillOpacity: fillOpacity,\r\n            width: width,\r\n            height: height,\r\n          }),\r\n        ];\r\n\r\n        this.currentPattern = 0;\r\n        this.rule('Slice').setAll({\r\n          fillOpacity: 0,\r\n        });\r\n\r\n        this.rule('Slice').setup = function (target) {\r\n          target.set('fillPattern', theme.patterns[theme.currentPattern]);\r\n          theme.currentPattern++;\r\n          if (theme.currentPattern === theme.patterns?.length) {\r\n            theme.currentPattern = 0;\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    maybeDisposeRoot(chartID);\r\n\r\n    var root = am5.Root.new(chartID);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    root.setThemes([\r\n      am5themes_Animated.new(root),\r\n      am5themes_Responsive.new(root),\r\n      MyTheme.new(root),\r\n    ]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\r\n    var chart = root.container.children.push(\r\n      am5percent.PieChart.new(root, {\r\n        //centerY: am5.percent(-2), //-10\r\n        y: am5.percent(-25), // space between pie chart and total lots\r\n        layout: root.horizontalLayout,\r\n      }),\r\n    );\r\n    chartRef.current = chart;\r\n\r\n    // Create series\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\r\n    var pieSeries = chart.series.push(\r\n      am5percent.PieSeries.new(root, {\r\n        name: 'Series',\r\n        categoryField: 'category',\r\n        valueField: 'value',\r\n        //legendLabelText: \"[{fill}]{category}[/]\",\r\n        legendValueText: \"{valuePercentTotal.formatNumber('#.')}% ({value})\",\r\n        radius: am5.percent(45), // outer radius\r\n        innerRadius: am5.percent(20),\r\n        marginBottom: -10,\r\n      }),\r\n    );\r\n    pieSeriesRef.current = pieSeries;\r\n    chart.series.push(pieSeries);\r\n\r\n    // Set slice opacity and stroke color\r\n    pieSeries.slices.template.setAll({\r\n      fillOpacity: 0,\r\n      stroke: am5.color('#ffffff'),\r\n      strokeWidth: 0.7,\r\n      strokeOpacity: 1,\r\n      templateField: 'sliceSettings',\r\n    });\r\n\r\n    // Disabling labels and ticksll\r\n    pieSeries.labels.template.set('visible', false);\r\n    pieSeries.ticks.template.set('visible', false);\r\n\r\n    // EventDispatcher is disposed at SpriteEventDispatcher...\r\n    // It looks like this error results from clicking events\r\n    pieSeries.slices.template.events.on('click', (ev) => {\r\n      const selected: any = ev.target.dataItem?.dataContext;\r\n      const categorySelect: string = selected.category;\r\n      const find = statusStructureChartQuery.find((emp: any) => emp.category === categorySelect);\r\n      const statusSelect = find?.value;\r\n\r\n      var highlightSelect: any;\r\n      var query = structureLayer.createQuery();\r\n\r\n      view.when(function () {\r\n        view.whenLayerView(structureLayer).then((layerView): any => {\r\n          //chartLayerView = layerView;\r\n\r\n          structureLayer.queryFeatures(query).then(function (results) {\r\n            const RESULT_LENGTH = results.features;\r\n            const ROW_N = RESULT_LENGTH.length;\r\n\r\n            let objID = [];\r\n            for (var i = 0; i < ROW_N; i++) {\r\n              var obj = results.features[i].attributes.OBJECTID;\r\n              objID.push(obj);\r\n            }\r\n\r\n            var queryExt = new Query({\r\n              objectIds: objID,\r\n            });\r\n\r\n            structureLayer.queryExtent(queryExt).then(function (result) {\r\n              if (result.extent) {\r\n                view.goTo(result.extent);\r\n              }\r\n            });\r\n\r\n            if (highlightSelect) {\r\n              highlightSelect.remove();\r\n            }\r\n            highlightSelect = layerView.highlight(objID);\r\n\r\n            view.on('click', function () {\r\n              layerView.filter = new FeatureFilter({\r\n                where: undefined,\r\n              });\r\n              highlightSelect.remove();\r\n            });\r\n          }); // End of queryFeatures\r\n\r\n          layerView.filter = new FeatureFilter({\r\n            where: 'StatusStruc = ' + statusSelect,\r\n          });\r\n        }); // End of view.whenLayerView\r\n      }); // End of view.whenv\r\n    });\r\n\r\n    pieSeries.data.setAll(structureData);\r\n\r\n    // Legend\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/legend-percent-series/\r\n    var legend = root.container.children.push(\r\n      am5.Legend.new(root, {\r\n        centerX: am5.percent(50),\r\n        x: am5.percent(50),\r\n        y: am5.percent(48),\r\n        layout: root.verticalLayout,\r\n      }),\r\n    );\r\n    legendRef.current = legend;\r\n    legend.data.setAll(pieSeries.dataItems);\r\n\r\n    // Change the size of legend markers\r\n    legend.markers.template.setAll({\r\n      width: 18,\r\n      height: 18,\r\n    });\r\n\r\n    // Change the marker shape\r\n    legend.markerRectangles.template.setAll({\r\n      cornerRadiusTL: 10,\r\n      cornerRadiusTR: 10,\r\n      cornerRadiusBL: 10,\r\n      cornerRadiusBR: 10,\r\n    });\r\n\r\n    // Responsive legend\r\n    // https://www.amcharts.com/docs/v5/tutorials/pie-chart-with-a-legend-with-dynamically-sized-labels/\r\n    // This aligns Legend to Left\r\n    chart.onPrivate('width', function (width: any) {\r\n      const boxWidth = 190; //props.style.width;\r\n      var availableSpace = Math.max(width - chart.height() - boxWidth, boxWidth);\r\n      //var availableSpace = (boxWidth - valueLabelsWidth) * 0.7\r\n      legend.labels.template.setAll({\r\n        width: availableSpace,\r\n        maxWidth: availableSpace,\r\n      });\r\n    });\r\n\r\n    // To align legend items: valueLabels right, labels to left\r\n    // 1. fix width of valueLabels\r\n    // 2. dynamically change width of labels by screen size\r\n\r\n    const valueLabelsWidth = 50;\r\n\r\n    // Change legend labelling properties\r\n    // To have responsive font size, do not set font size\r\n    legend.labels.template.setAll({\r\n      oversizedBehavior: 'truncate',\r\n      fill: am5.color('#ffffff'),\r\n      //textDecoration: \"underline\"\r\n      //width: am5.percent(200)\r\n      //fontWeight: \"300\"\r\n    });\r\n\r\n    legend.valueLabels.template.setAll({\r\n      textAlign: 'right',\r\n      width: valueLabelsWidth,\r\n      fill: am5.color('#ffffff'),\r\n      //fontSize: LEGEND_FONT_SIZE,\r\n    });\r\n\r\n    legend.itemContainers.template.setAll({\r\n      // set space between legend items\r\n      paddingTop: 1.1,\r\n      paddingBottom: 2,\r\n    });\r\n\r\n    pieSeries.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID, structureData]);\r\n\r\n  useEffect(() => {\r\n    pieSeriesRef.current?.data.setAll(structureData);\r\n    legendRef.current?.data.setAll(pieSeriesRef.current.dataItems);\r\n  });\r\n\r\n  // Mode of Acquisition\r\n  useEffect(() => {\r\n    // Dispose previously created root element\r\n    maybeDisposeRoot(chartID_moa);\r\n\r\n    var root = am5.Root.new(chartID_moa);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n    var chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: false,\r\n        panY: false,\r\n        wheelX: 'none',\r\n        wheelY: 'none',\r\n        paddingLeft: 0,\r\n        marginTop: 20,\r\n        //height: am5.percent(81),\r\n      }),\r\n    );\r\n    chartRef_moa.current = chart;\r\n\r\n    // Create axes\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n    var yRenderer = am5xy.AxisRendererY.new(root, {\r\n      minGridDistance: 5,\r\n      strokeOpacity: 1,\r\n      strokeWidth: 1,\r\n      inversed: true,\r\n      stroke: am5.color('#ffffff'),\r\n    });\r\n    yRenderer.grid.template.set('location', 1);\r\n\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.CategoryAxis.new(root, {\r\n        maxDeviation: 0,\r\n        categoryField: 'category',\r\n        renderer: yRenderer,\r\n      }),\r\n    );\r\n\r\n    // Remove grid lines\r\n    yAxis.get('renderer').grid.template.set('forceHidden', true);\r\n\r\n    var xAxis = chart.xAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        maxDeviation: 0,\r\n        min: 0,\r\n        strictMinMax: true,\r\n        calculateTotals: true,\r\n        renderer: am5xy.AxisRendererX.new(root, {\r\n          visible: true,\r\n          strokeOpacity: 1,\r\n          strokeWidth: 1,\r\n          stroke: am5.color('#ffffff'),\r\n        }),\r\n      }),\r\n    );\r\n    // Remove grid lines\r\n    xAxis.get('renderer').grid.template.set('forceHidden', true);\r\n\r\n    // Label properties for yAxis (category axis)\r\n    yAxis.get('renderer').labels.template.setAll({\r\n      //oversizedBehavior: \"wrap\",\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: 12,\r\n    });\r\n\r\n    xAxis.get('renderer').labels.template.setAll({\r\n      fill: am5.color('#ffffff'),\r\n      fontSize: 10,\r\n    });\r\n\r\n    // Create series\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n    var series = chart.series.push(\r\n      am5xy.ColumnSeries.new(root, {\r\n        name: 'Series 1',\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueXField: 'value',\r\n        sequencedInterpolation: true,\r\n        categoryYField: 'category',\r\n      }),\r\n    );\r\n    barSeriesRef.current = series;\r\n    chart.series.push(series);\r\n\r\n    var columnTemplate = series.columns.template;\r\n\r\n    columnTemplate.setAll({\r\n      draggable: true,\r\n      cursorOverStyle: 'pointer',\r\n      tooltipText: '{value}',\r\n      cornerRadiusBR: 10,\r\n      cornerRadiusTR: 10,\r\n      strokeOpacity: 0,\r\n    });\r\n\r\n    // Add Label bullet\r\n    series.bullets.push(function () {\r\n      return am5.Bullet.new(root, {\r\n        locationY: 1,\r\n        sprite: am5.Label.new(root, {\r\n          text: '{value}',\r\n          fill: root.interfaceColors.get('alternativeText'),\r\n          centerY: 8,\r\n          centerX: am5.p50,\r\n          fontSize: 13,\r\n          populateText: true,\r\n        }),\r\n      });\r\n    });\r\n\r\n    // Use different color by column\r\n    /*\r\n    columnTemplate.adapters.add('fill', (fill, target) => {\r\n      return chart.get('colors').getIndex(series.columns.indexOf(target));\r\n    });\r\n\r\n    columnTemplate.adapters.add('stroke', (stroke, target) => {\r\n      return chart.get('colors').getIndex(series.columns.indexOf(target));\r\n    });\r\n    */\r\n\r\n    series.columns.template.events.on('click', function (ev) {\r\n      const selected: any = ev.target.dataItem?.dataContext;\r\n      const categorySelect: string = selected.category;\r\n      const find = statusMoaStructureChartQuery.find((emp: any) => emp.category === categorySelect);\r\n      const statusSelect = find?.value;\r\n\r\n      var highlightSelect: any;\r\n\r\n      var query = structureLayer.createQuery();\r\n      view.whenLayerView(structureLayer).then(function (layerView) {\r\n        //CHART_ELEMENT.style.visibility = \"visible\";\r\n\r\n        structureLayer.queryFeatures(query).then(function (results) {\r\n          const RESULT_LENGTH = results.features;\r\n          const ROW_N = RESULT_LENGTH.length;\r\n\r\n          let objID = [];\r\n          for (var i = 0; i < ROW_N; i++) {\r\n            var obj = results.features[i].attributes.OBJECTID;\r\n            objID.push(obj);\r\n          }\r\n\r\n          var queryExt = new Query({\r\n            objectIds: objID,\r\n          });\r\n\r\n          structureLayer.queryExtent(queryExt).then(function (result) {\r\n            if (result.extent) {\r\n              view.goTo(result.extent);\r\n            }\r\n          });\r\n\r\n          if (highlightSelect) {\r\n            highlightSelect.remove();\r\n          }\r\n          highlightSelect = layerView.highlight(objID);\r\n\r\n          view.on('click', function () {\r\n            layerView.filter = new FeatureFilter({\r\n              where: undefined,\r\n            });\r\n            highlightSelect.remove();\r\n          });\r\n        });\r\n        layerView.filter = new FeatureFilter({\r\n          where: 'S_MOA = ' + statusSelect,\r\n        });\r\n      }); // End of whenLayerView\r\n    });\r\n\r\n    yAxisRef.current = yAxis;\r\n    yAxis.data.setAll(structureMoaData);\r\n    series.data.setAll(structureMoaData);\r\n\r\n    // Make stuff animate on load\r\n    // https://www.amcharts.com/docs/v5/concepts/animations/\r\n    series.appear(1000);\r\n    chart.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID_moa, structureMoaData]);\r\n\r\n  useEffect(() => {\r\n    barSeriesRef.current?.data.setAll(structureMoaData);\r\n    yAxisRef.current?.data.setAll(structureMoaData);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"lotNumberImage\">\r\n        <div>\r\n          <div className=\"totalStructuresLabel\">TOTAL STRUCTURES </div>\r\n          <br />\r\n          <br />\r\n          <b className=\"totalLotsNumber\">\r\n            {thousands_separators(structureNumber[3])}{' '}\r\n            <div className=\"totalLotsNumber2\">({thousands_separators(structureNumber[2])})</div>{' '}\r\n          </b>\r\n        </div>\r\n        <img\r\n          src=\"https://EijiGorilla.github.io/Symbols/House_Logo.svg\"\r\n          alt=\"Structure Logo\"\r\n          height={'19%'}\r\n          width={'19%'}\r\n          style={{ padding: '10px', margin: 'auto' }}\r\n        />\r\n      </div>\r\n      <div\r\n        id={chartID}\r\n        style={{\r\n          height: '45vh',\r\n          backgroundColor: 'rgb(0,0,0,0)',\r\n          color: 'white',\r\n          marginBottom: '-4.5vh',\r\n        }}\r\n      ></div>\r\n      <div className=\"structureNumberImage\">\r\n        <div>\r\n          <div className=\"totalStructuresLabel\">DEMOLISHED</div>\r\n          <br />\r\n          <br />\r\n          {/* If zero, display as zero else */}\r\n          {structureNumber[1] === 0 ? (\r\n            <b className=\"DemolishedNumber\">{structureNumber[0]}% (0)</b>\r\n          ) : (\r\n            <b className=\"DemolishedNumber\">\r\n              {structureNumber[0]}% ({thousands_separators(structureNumber[1])})\r\n            </b>\r\n          )}\r\n        </div>\r\n        <img\r\n          src=\"https://EijiGorilla.github.io/Symbols/Structure_Demolished.svg\"\r\n          alt=\"Structure Logo\"\r\n          height={'18%'}\r\n          width={'18%'}\r\n          style={{ padding: '10px', margin: 'auto' }}\r\n        />\r\n      </div>\r\n      <div className=\"moaStructureTitle\">MODE OF ACQUISITION</div>\r\n      <div\r\n        id={chartID_moa}\r\n        style={{\r\n          height: '21vh',\r\n          backgroundColor: 'rgb(0,0,0,0)',\r\n          color: 'white',\r\n        }}\r\n      ></div>\r\n    </>\r\n  );\r\n}); // End of lotChartgs\r\n\r\nexport default StructureChart;\r\n"],"names":["LinePattern","Pattern","_beforeChanged","super","this","isDirty","_clear","_draw","w","get","h","gap","strokeWidth","step","count","i","y","Math","round","_display","moveTo","lineTo","lineStyle","strokeDasharray","$type","setLineDash","strokeDashoffset","setLineDashOffset","endStroke","Object","defineProperty","classNames","concat","className","maybeDisposeRoot","divId","am5","rootElements","root","dom","id","dispose","memo","_ref","contractp","landtype","landsection","typelist","pieSeriesRef","useRef","legendRef","chartRef","structureData","setStructureData","useState","category","String","value","Number","chartID","structureNumber","setStructureNumber","barSeriesRef","yAxisRef","chartRef_moa","structureMoaData","setStructureMoaData","chartID_moa","qCP","qCpLandType","qCpLandTypeSection","structureLayer","definitionExpression","useEffect","generateStructureData","then","result","generateStrucNumber","response","generateStrucMoaData","_root$_logo","MyTheme","constructor","arguments","patterns","currentPattern","setupDefaultRules","theme","rotation","width","height","new","_root","color","fillOpacity","rule","setAll","setup","target","_theme$patterns","set","length","container","children","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","chart","push","am5percent","layout","horizontalLayout","current","pieSeries","series","name","categoryField","valueField","legendValueText","radius","innerRadius","marginBottom","slices","template","stroke","strokeOpacity","templateField","labels","ticks","events","on","ev","_ev$target$dataItem","categorySelect","dataItem","dataContext","find","statusStructureChartQuery","emp","statusSelect","highlightSelect","query","createQuery","view","when","whenLayerView","layerView","queryFeatures","results","ROW_N","features","objID","obj","attributes","OBJECTID","queryExt","Query","objectIds","queryExtent","extent","goTo","remove","highlight","filter","FeatureFilter","where","undefined","data","legend","centerX","x","verticalLayout","dataItems","markers","markerRectangles","cornerRadiusTL","cornerRadiusTR","cornerRadiusBL","cornerRadiusBR","onPrivate","availableSpace","max","maxWidth","oversizedBehavior","fill","valueLabels","textAlign","itemContainers","paddingTop","paddingBottom","appear","_pieSeriesRef$current","_legendRef$current","_root$_logo2","am5xy","panX","panY","wheelX","wheelY","paddingLeft","marginTop","yRenderer","minGridDistance","inversed","grid","yAxis","yAxes","maxDeviation","renderer","xAxis","xAxes","min","strictMinMax","calculateTotals","visible","fontSize","valueXField","sequencedInterpolation","categoryYField","columns","draggable","cursorOverStyle","tooltipText","bullets","locationY","sprite","text","interfaceColors","centerY","populateText","_ev$target$dataItem2","statusMoaStructureChartQuery","_barSeriesRef$current","_yAxisRef$current","_jsxs","_Fragment","_jsx","thousands_separators","src","alt","style","padding","margin","backgroundColor"],"sourceRoot":""}