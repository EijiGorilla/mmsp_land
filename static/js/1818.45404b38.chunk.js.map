{"version":3,"file":"static/js/1818.45404b38.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/core/render/patterns/LinePattern.ts","components/StructureChart.tsx"],"sourcesContent":["import { Pattern, IPatternSettings, IPatternPrivate } from \"./Pattern\";\nimport * as $type from \"../../util//Type\";\n\nexport interface ILinePatternSettings extends IPatternSettings {\n\n\t/**\n\t * Gap between  lines, in pixels.\n\t *\n\t * @default 6\n\t */\n\tgap?: number;\n\n}\n\nexport interface ILinePatternPrivate extends IPatternPrivate {\n}\n\n/**\n * Line pattern.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n */\nexport class LinePattern extends Pattern {\n\n\tdeclare public _settings: ILinePatternSettings;\n\tdeclare public _privateSettings: ILinePatternPrivate;\n\n\tpublic static className: string = \"LinePattern\";\n\tpublic static classNames: Array<string> = Pattern.classNames.concat([LinePattern.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"gap\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tprotected _draw() {\n\t\tsuper._draw();\n\n\t\tconst w = this.get(\"width\", 100);\n\t\tconst h = this.get(\"height\", 100);\n\t\tconst gap = this.get(\"gap\", 0);\n\t\tconst strokeWidth = this.get(\"strokeWidth\", 1);\n\n\t\tif (!gap) {\n\t\t\tthis._display.moveTo(0, 0);\n\t\t\tthis._display.lineTo(w, 0);\n\t\t}\n\t\telse {\n\t\t\tlet step = gap + strokeWidth;\n\t\t\tlet count = h / step;\n\n\t\t\tfor (let i = -count; i < count * 2; i++) {\n\t\t\t\tconst y = Math.round(i * step - step / 2) + 0.5;\n\t\t\t\tthis._display.moveTo(-w, y);\n\t\t\t\tthis._display.lineTo(w * 2, y);\n\t\t\t}\n\t\t}\n\n\t\tthis._display.lineStyle(strokeWidth, this.get(\"color\"), this.get(\"colorOpacity\"));\n\n\t\tlet strokeDasharray = this.get(\"strokeDasharray\");\n\t\tif ($type.isNumber(strokeDasharray)) {\n\t\t\tif (strokeDasharray < 0.5) {\n\t\t\t\tstrokeDasharray = [0];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstrokeDasharray = [strokeDasharray]\n\t\t\t}\n\t\t}\n\t\tthis._display.setLineDash(strokeDasharray as number[]);\n\n\t\tconst strokeDashoffset = this.get(\"strokeDashoffset\");\n\t\tif (strokeDashoffset) {\n\t\t\tthis._display.setLineDashOffset(strokeDashoffset);\n\t\t}\n\n\t\tthis._display.endStroke();\n\t}\n}\n","import { useEffect, useRef, useState, memo } from 'react';\r\nimport { structureLayer } from '../layers';\r\nimport { view } from '../Scene';\r\nimport FeatureFilter from '@arcgis/core/layers/support/FeatureFilter';\r\nimport Query from '@arcgis/core/rest/support/Query';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport * as am5percent from '@amcharts/amcharts5/percent';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport {\r\n  generateStrucNumber,\r\n  generateStructureData,\r\n  thousands_separators,\r\n  statusStructureChartQuery,\r\n} from '../Query';\r\n\r\nimport { CalciteLabel } from '@esri/calcite-components-react';\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\n\r\n///*** Others */\r\n\r\n/// Draw chart\r\nconst StructureChart = memo(({ contractp, landtype, landsection, typelist }: any) => {\r\n  // 1. Structure\r\n  const pieSeriesRef = useRef<unknown | any | undefined>({});\r\n  const legendRef = useRef<unknown | any | undefined>({});\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [structureData, setStructureData] = useState([\r\n    {\r\n      category: String,\r\n      value: Number,\r\n    },\r\n  ]);\r\n\r\n  const chartID = 'structure-chart';\r\n  const [structureNumber, setStructureNumber] = useState([]);\r\n\r\n  // 2.Mode of Acquisition\r\n  const barSeriesRef = useRef<unknown | any | undefined>({});\r\n  const yAxisRef = useRef<unknown | any | undefined>({});\r\n  const chartRef_moa = useRef<unknown | any | undefined>({});\r\n  const chartID_moa = 'structure-moa';\r\n\r\n  // Query\r\n  // Query\r\n  const qCP = \"Package = '\" + contractp + \"'\";\r\n  const qLandType = \"Type = '\" + landtype + \"'\";\r\n  const qCpLandType = qCP + ' AND ' + qLandType;\r\n  const qLandSection = \"Station1 ='\" + landsection + \"'\";\r\n  const qCpLandTypeSection = qCpLandType + ' AND ' + qLandSection;\r\n\r\n  if (!contractp) {\r\n    structureLayer.definitionExpression = '1=1';\r\n  } else if (contractp && !landtype && !landsection) {\r\n    structureLayer.definitionExpression = qCP;\r\n  } else if (contractp && landtype && !landsection) {\r\n    structureLayer.definitionExpression = qCpLandType;\r\n  } else {\r\n    structureLayer.definitionExpression = qCpLandTypeSection;\r\n  }\r\n\r\n  useEffect(() => {\r\n    generateStructureData().then((result: any) => {\r\n      setStructureData(result);\r\n    });\r\n\r\n    // Structure Number\r\n    generateStrucNumber().then((response: any) => {\r\n      setStructureNumber(response);\r\n    });\r\n  }, [contractp, landtype, landsection]);\r\n\r\n  useEffect(() => {\r\n    class MyTheme extends am5.Theme {\r\n      patterns: am5.LinePattern[] | undefined | any;\r\n      currentPattern: number | any | undefined;\r\n      setupDefaultRules() {\r\n        var theme = this;\r\n\r\n        const gap = 4;\r\n        const rotation = 135;\r\n        const strokeWidth = 1.1;\r\n        const fillOpacity = 0;\r\n        const width = 10;\r\n        const height = 10;\r\n\r\n        this.patterns = [\r\n          am5.LinePattern.new(this._root, {\r\n            color: am5.color('#70AD47'),\r\n            gap: gap,\r\n            rotation: rotation,\r\n            strokeWidth: strokeWidth,\r\n            fillOpacity: fillOpacity,\r\n            width: width,\r\n            height: height,\r\n          }),\r\n\r\n          am5.LinePattern.new(this._root, {\r\n            color: am5.color('#0070FF'),\r\n            gap: gap,\r\n            rotation: rotation,\r\n            strokeWidth: strokeWidth,\r\n            fillOpacity: fillOpacity,\r\n            width: width,\r\n            height: height,\r\n          }),\r\n\r\n          am5.LinePattern.new(this._root, {\r\n            color: am5.color('#FFFF00'),\r\n            gap: gap,\r\n            rotation: rotation,\r\n            strokeWidth: strokeWidth,\r\n            fillOpacity: fillOpacity,\r\n            width: width,\r\n            height: height,\r\n          }),\r\n\r\n          am5.LinePattern.new(this._root, {\r\n            color: am5.color('#FFAA00'),\r\n            gap: gap,\r\n            rotation: rotation,\r\n            strokeWidth: strokeWidth,\r\n            fillOpacity: fillOpacity,\r\n            width: width,\r\n            height: height,\r\n          }),\r\n          am5.LinePattern.new(this._root, {\r\n            color: am5.color('#FF0000'),\r\n            gap: gap,\r\n            rotation: rotation,\r\n            strokeWidth: strokeWidth,\r\n            fillOpacity: fillOpacity,\r\n            width: width,\r\n            height: height,\r\n          }),\r\n\r\n          am5.LinePattern.new(this._root, {\r\n            color: am5.color('#00734C'),\r\n            gap: gap,\r\n            rotation: rotation,\r\n            strokeWidth: strokeWidth,\r\n            fillOpacity: fillOpacity,\r\n            width: width,\r\n            height: height,\r\n          }),\r\n        ];\r\n\r\n        this.currentPattern = 0;\r\n        this.rule('Slice').setAll({\r\n          fillOpacity: 0,\r\n        });\r\n\r\n        this.rule('Slice').setup = function (target) {\r\n          target.set('fillPattern', theme.patterns[theme.currentPattern]);\r\n          theme.currentPattern++;\r\n          if (theme.currentPattern === theme.patterns?.length) {\r\n            theme.currentPattern = 0;\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    maybeDisposeRoot(chartID);\r\n\r\n    var root = am5.Root.new(chartID);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    root.setThemes([\r\n      am5themes_Animated.new(root),\r\n      am5themes_Responsive.new(root),\r\n      MyTheme.new(root),\r\n    ]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\r\n    var chart = root.container.children.push(\r\n      am5percent.PieChart.new(root, {\r\n        layout: root.verticalLayout,\r\n      }),\r\n    );\r\n    chartRef.current = chart;\r\n\r\n    // Create series\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\r\n    var pieSeries = chart.series.push(\r\n      am5percent.PieSeries.new(root, {\r\n        name: 'Series',\r\n        categoryField: 'category',\r\n        valueField: 'value',\r\n        //legendLabelText: \"[{fill}]{category}[/]\",\r\n        legendValueText: \"{valuePercentTotal.formatNumber('#.')}% ({value})\",\r\n        radius: am5.percent(45), // outer radius\r\n        innerRadius: am5.percent(20),\r\n        scale: 1.8,\r\n      }),\r\n    );\r\n    pieSeriesRef.current = pieSeries;\r\n    chart.series.push(pieSeries);\r\n\r\n    // Set slice opacity and stroke color\r\n    pieSeries.slices.template.setAll({\r\n      fillOpacity: 0,\r\n      stroke: am5.color('#ffffff'),\r\n      strokeWidth: 0.7,\r\n      strokeOpacity: 1,\r\n      templateField: 'sliceSettings',\r\n    });\r\n\r\n    // Disabling labels and ticksll\r\n    pieSeries.labels.template.set('visible', false);\r\n    pieSeries.ticks.template.set('visible', false);\r\n\r\n    // EventDispatcher is disposed at SpriteEventDispatcher...\r\n    // It looks like this error results from clicking events\r\n    pieSeries.slices.template.events.on('click', (ev) => {\r\n      const selected: any = ev.target.dataItem?.dataContext;\r\n      const categorySelect: string = selected.category;\r\n      const find = statusStructureChartQuery.find((emp: any) => emp.category === categorySelect);\r\n      const statusSelect = find?.value;\r\n\r\n      var highlightSelect: any;\r\n      var query = structureLayer.createQuery();\r\n\r\n      view.when(function () {\r\n        view.whenLayerView(structureLayer).then((layerView): any => {\r\n          //chartLayerView = layerView;\r\n\r\n          structureLayer.queryFeatures(query).then((results: any) => {\r\n            const RESULT_LENGTH = results.features;\r\n            const ROW_N = RESULT_LENGTH.length;\r\n\r\n            let objID = [];\r\n            for (var i = 0; i < ROW_N; i++) {\r\n              var obj = results.features[i].attributes.OBJECTID;\r\n              objID.push(obj);\r\n            }\r\n\r\n            var queryExt = new Query({\r\n              objectIds: objID,\r\n            });\r\n\r\n            structureLayer.queryExtent(queryExt).then(function (result) {\r\n              if (result.extent) {\r\n                view.goTo(result.extent);\r\n              }\r\n            });\r\n\r\n            if (highlightSelect) {\r\n              highlightSelect.remove();\r\n            }\r\n            highlightSelect = layerView.highlight(objID);\r\n\r\n            view.on('click', function () {\r\n              layerView.filter = new FeatureFilter({\r\n                where: undefined,\r\n              });\r\n              highlightSelect.remove();\r\n            });\r\n          }); // End of queryFeatures\r\n\r\n          layerView.filter = new FeatureFilter({\r\n            where: 'Status = ' + statusSelect,\r\n          });\r\n        }); // End of view.whenLayerView\r\n      }); // End of view.whenv\r\n    });\r\n\r\n    pieSeries.data.setAll(structureData);\r\n\r\n    // Legend\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/legend-percent-series/\r\n    var legend = chart.children.push(\r\n      am5.Legend.new(root, {\r\n        centerX: am5.percent(50),\r\n        x: am5.percent(50),\r\n      }),\r\n    );\r\n    legendRef.current = legend;\r\n    legend.data.setAll(pieSeries.dataItems);\r\n\r\n    // Change the size of legend markers\r\n    legend.markers.template.setAll({\r\n      width: 18,\r\n      height: 18,\r\n    });\r\n\r\n    // Change the marker shape\r\n    legend.markerRectangles.template.setAll({\r\n      cornerRadiusTL: 10,\r\n      cornerRadiusTR: 10,\r\n      cornerRadiusBL: 10,\r\n      cornerRadiusBR: 10,\r\n    });\r\n\r\n    // Responsive legend\r\n    // https://www.amcharts.com/docs/v5/tutorials/pie-chart-with-a-legend-with-dynamically-sized-labels/\r\n    // This aligns Legend to Left\r\n    chart.onPrivate('width', function (width: any) {\r\n      const boxWidth = 190; //props.style.width;\r\n      var availableSpace = Math.max(width - chart.height() - boxWidth, boxWidth);\r\n      //var availableSpace = (boxWidth - valueLabelsWidth) * 0.7\r\n      legend.labels.template.setAll({\r\n        width: availableSpace,\r\n        maxWidth: availableSpace,\r\n      });\r\n    });\r\n\r\n    // To align legend items: valueLabels right, labels to left\r\n    // 1. fix width of valueLabels\r\n    // 2. dynamically change width of labels by screen size\r\n\r\n    const valueLabelsWidth = 50;\r\n\r\n    // Change legend labelling properties\r\n    // To have responsive font size, do not set font size\r\n    legend.labels.template.setAll({\r\n      oversizedBehavior: 'truncate',\r\n      fill: am5.color('#ffffff'),\r\n      //textDecoration: \"underline\"\r\n      //width: am5.percent(200)\r\n      //fontWeight: \"300\"\r\n    });\r\n\r\n    legend.valueLabels.template.setAll({\r\n      textAlign: 'right',\r\n      width: valueLabelsWidth,\r\n      fill: am5.color('#ffffff'),\r\n      //fontSize: LEGEND_FONT_SIZE,\r\n    });\r\n\r\n    legend.itemContainers.template.setAll({\r\n      // set space between legend items\r\n      paddingTop: 1.1,\r\n      paddingBottom: 2,\r\n    });\r\n\r\n    pieSeries.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID, structureData]);\r\n\r\n  useEffect(() => {\r\n    pieSeriesRef.current?.data.setAll(structureData);\r\n    legendRef.current?.data.setAll(pieSeriesRef.current.dataItems);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* Total Structure Number */}\r\n      <CalciteLabel>TOTAL STRUCTURES</CalciteLabel>\r\n      <CalciteLabel layout=\"inline\">\r\n        <b className=\"totalLotsNumber\">\r\n          {thousands_separators(structureNumber[3])}\r\n          <img\r\n            src=\"https://EijiGorilla.github.io/Symbols/House_Logo.svg\"\r\n            alt=\"Structure Logo\"\r\n            height={'35%'}\r\n            width={'35%'}\r\n            style={{ marginLeft: '155%', display: 'flex', marginTop: '-25%' }}\r\n          />\r\n          <div className=\"totalLotsNumber2\">({thousands_separators(structureNumber[2])})</div>{' '}\r\n        </b>\r\n      </CalciteLabel>\r\n\r\n      {/* Structure Chart */}\r\n      <div\r\n        id={chartID}\r\n        style={{\r\n          height: '45vh',\r\n          backgroundColor: 'rgb(0,0,0,0)',\r\n          color: 'white',\r\n          marginBottom: '10%',\r\n        }}\r\n      ></div>\r\n\r\n      {/* Demolished number */}\r\n      <CalciteLabel>DEMOLISHED</CalciteLabel>\r\n      <CalciteLabel layout=\"inline\">\r\n        {structureNumber[1] === 0 ? (\r\n          <b className=\"DemolishedNumber\">\r\n            {structureNumber[0]}% (0)\r\n            <img\r\n              src=\"https://EijiGorilla.github.io/Symbols/Structure_Demolished.svg\"\r\n              alt=\"Structure Logo\"\r\n              height={'15%'}\r\n              width={'15%'}\r\n              style={{ marginLeft: '70%', display: 'flex', marginTop: '-10%' }}\r\n            />\r\n          </b>\r\n        ) : (\r\n          <b className=\"DemolishedNumber\">\r\n            {structureNumber[0]}% ({thousands_separators(structureNumber[1])})\r\n            <img\r\n              src=\"https://EijiGorilla.github.io/Symbols/Structure_Demolished.svg\"\r\n              alt=\"Structure Logo\"\r\n              height={'18%'}\r\n              width={'18%'}\r\n              style={{ marginLeft: '70%', display: 'flex', marginTop: '-10%' }}\r\n            />\r\n          </b>\r\n        )}\r\n      </CalciteLabel>\r\n    </>\r\n  );\r\n}); // End of lotChartgs\r\n\r\nexport default StructureChart;\r\n"],"names":["LinePattern","Pattern","_beforeChanged","super","this","isDirty","_clear","_draw","w","get","h","gap","strokeWidth","step","count","i","y","Math","round","_display","moveTo","lineTo","lineStyle","strokeDasharray","$type","setLineDash","strokeDashoffset","setLineDashOffset","endStroke","Object","defineProperty","classNames","concat","className","memo","_ref","contractp","landtype","landsection","typelist","pieSeriesRef","useRef","legendRef","chartRef","structureData","setStructureData","useState","category","String","value","Number","chartID","structureNumber","setStructureNumber","qCP","qCpLandType","qCpLandTypeSection","structureLayer","definitionExpression","useEffect","generateStructureData","then","result","generateStrucNumber","response","_root$_logo","divId","MyTheme","am5","constructor","arguments","patterns","currentPattern","setupDefaultRules","theme","rotation","width","height","new","_root","color","fillOpacity","rule","setAll","setup","target","_theme$patterns","set","length","rootElements","root","dom","id","dispose","container","children","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","chart","push","am5percent","layout","verticalLayout","current","pieSeries","series","name","categoryField","valueField","legendValueText","radius","innerRadius","scale","slices","template","stroke","strokeOpacity","templateField","labels","ticks","events","on","ev","_ev$target$dataItem","categorySelect","dataItem","dataContext","find","statusStructureChartQuery","emp","statusSelect","highlightSelect","query","createQuery","view","when","whenLayerView","layerView","queryFeatures","results","ROW_N","features","objID","obj","attributes","OBJECTID","queryExt","Query","objectIds","queryExtent","extent","goTo","remove","highlight","filter","FeatureFilter","where","undefined","data","legend","centerX","x","dataItems","markers","markerRectangles","cornerRadiusTL","cornerRadiusTR","cornerRadiusBL","cornerRadiusBR","onPrivate","availableSpace","max","maxWidth","oversizedBehavior","fill","valueLabels","textAlign","itemContainers","paddingTop","paddingBottom","appear","_pieSeriesRef$current","_legendRef$current","_jsxs","_Fragment","_jsx","CalciteLabel","thousands_separators","src","alt","style","marginLeft","display","marginTop","backgroundColor","marginBottom"],"sourceRoot":""}