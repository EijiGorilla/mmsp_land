{"version":3,"file":"static/js/1818.2156f36e.chunk.js","mappings":"uPAsBM,MAAOA,UAAoBC,EAAAA,EAQzBC,cAAAA,GACNC,MAAMD,iBAEFE,KAAKC,QAAQ,SAChBD,KAAKE,QAAS,EAEhB,CAEUC,KAAAA,GACTJ,MAAMI,QAEN,MAAMC,EAAIJ,KAAKK,IAAI,QAAS,KACtBC,EAAIN,KAAKK,IAAI,SAAU,KACvBE,EAAMP,KAAKK,IAAI,MAAO,GACtBG,EAAcR,KAAKK,IAAI,cAAe,GAE5C,GAAKE,EAIA,CACJ,IAAIE,EAAOF,EAAMC,EACbE,EAAQJ,EAAIG,EAEhB,IAAK,IAAIE,GAAKD,EAAOC,EAAY,EAARD,EAAWC,IAAK,CACxC,MAAMC,EAAIC,KAAKC,MAAMH,EAAIF,EAAOA,EAAO,GAAK,GAC5CT,KAAKe,SAASC,QAAQZ,EAAGQ,GACzBZ,KAAKe,SAASE,OAAW,EAAJb,EAAOQ,E,OAV7BZ,KAAKe,SAASC,OAAO,EAAG,GACxBhB,KAAKe,SAASE,OAAOb,EAAG,GAazBJ,KAAKe,SAASG,UAAUV,EAAaR,KAAKK,IAAI,SAAUL,KAAKK,IAAI,iBAEjE,IAAIc,EAAkBnB,KAAKK,IAAI,mBAC3Be,EAAAA,GAAeD,KAEjBA,EADGA,EAAkB,GACH,CAAC,GAGD,CAACA,IAGrBnB,KAAKe,SAASM,YAAYF,GAE1B,MAAMG,EAAmBtB,KAAKK,IAAI,oBAC9BiB,GACHtB,KAAKe,SAASQ,kBAAkBD,GAGjCtB,KAAKe,SAASS,WACf,EArDAC,OAAAC,eAAA9B,EAAA,a,gDAAkC,gBAClC6B,OAAAC,eAAA9B,EAAA,c,gDAA0CC,EAAAA,EAAQ8B,WAAWC,OAAO,CAAChC,EAAYiC,c,mJCDlF,MAyWA,GAzWuBC,EAAAA,EAAAA,OAAKC,IAA0D,IAAzD,UAAEC,EAAS,SAAEC,EAAQ,YAAEC,EAAW,SAAEC,GAAeJ,EAE9E,MAAMK,GAAeC,EAAAA,EAAAA,QAAkC,CAAC,GAClDC,GAAYD,EAAAA,EAAAA,QAAkC,CAAC,GAC/CE,GAAWF,EAAAA,EAAAA,QAAkC,CAAC,IAC7CG,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,CACjD,CACEC,SAAUC,OACVC,MAAOC,UAILC,EAAU,mBACTC,EAAiBC,IAAsBP,EAAAA,EAAAA,UAAS,IAUjDQ,IAPeb,EAAAA,EAAAA,QAAkC,CAAC,IACvCA,EAAAA,EAAAA,QAAkC,CAAC,IAC/BA,EAAAA,EAAAA,QAAkC,CAAC,GAK5C,cAAgBL,EAAY,KAElCmB,EAAcD,EAAM,SADR,WAAajB,EAAW,KAGpCmB,EAAqBD,EAAc,SADpB,cAAgBjB,EAAc,KAmRnD,OA3QEmB,EAAAA,GAAeC,qBALZtB,GAEMA,GAAcC,GAAaC,EAE3BF,GAAaC,IAAaC,EACGiB,EAEAC,EAJAF,EAFA,OASxCK,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,IAAsBxB,EAAWC,EAAUC,GAAauB,MAAMC,IAC5DjB,EAAiBiB,EAAO,KAI1BC,EAAAA,EAAAA,MAAsBF,MAAMG,IAC1BX,EAAmBW,EAAS,GAC5B,GACD,CAAC5B,EAAWC,EAAUC,KAEzBqB,EAAAA,EAAAA,YAAU,KAAO,IAADM,EA7DQC,EA8DtB,MAAMC,UAAgBC,EAAAA,EAAUC,WAAAA,GAAA,SAAAC,WAAA,KAC9BC,cAAQ,OACRC,oBAAc,EACdC,iBAAAA,GACE,IAAIC,EAAQtE,KAEZ,MAOMmE,EAAWI,EAAAA,GAAkBC,KAAI,CAACC,EAAYC,IAC3CjD,OAAOkD,OACZX,EAAgBY,IAAI5E,KAAK6E,MAAO,CAC9BJ,MAAOT,EAAAA,GAAUS,GACjBlE,IAXM,EAYNuE,SAXW,IAYXtE,YAXc,IAYduE,YAXc,EAYdC,MAXQ,GAYRC,OAXS,QAgBfjF,KAAKmE,SAAWA,EAEhBnE,KAAKoE,eAAiB,EACtBpE,KAAKkF,KAAK,SAASC,OAAO,CACxBJ,YAAa,IAGf/E,KAAKkF,KAAK,SAASE,MAAQ,SAAUC,GAAS,IAADC,EAC3CD,EAAOE,IAAI,cAAejB,EAAMH,SAASG,EAAMF,iBAC/CE,EAAMF,iBACFE,EAAMF,kBAAiC,QAAnBkB,EAAKhB,EAAMH,gBAAQ,IAAAmB,OAAA,EAAdA,EAAgBE,UAC3ClB,EAAMF,eAAiB,EAE3B,CACF,EAvGoBN,EA0GLf,EAzGnBiB,EAAAA,GAAeA,EAAAA,GAAayB,cAAc,SAAUC,GAC9CA,EAAKC,IAAIC,KAAO9B,GAClB4B,EAAKG,SAET,IAuGE,IAAIH,EAAO1B,EAAAA,EAASY,IAAI7B,GACxB2C,EAAKI,UAAUC,SAASC,QACd,QAAVnC,EAAA6B,EAAKO,aAAK,IAAApC,GAAVA,EAAYgC,UAIZH,EAAKQ,UAAU,CACbC,EAAAA,EAAmBvB,IAAIc,GACvBU,EAAAA,EAAqBxB,IAAIc,GACzB3B,EAAQa,IAAIc,KAKd,IAAIW,EAAQX,EAAKI,UAAUC,SAASO,KAClCC,EAAAA,EAAoB3B,IAAIc,EAAM,CAC5Bc,OAAQd,EAAKe,kBAGjBlE,EAASmE,QAAUL,EAInB,IAAIM,EAAYN,EAAMO,OAAON,KAC3BC,EAAAA,EAAqB3B,IAAIc,EAAM,CAC7BmB,KAAM,SACNC,cAAe,WACfC,WAAY,QAEZC,gBAAiB,oDACjBC,OAAQjD,EAAAA,GAAY,IACpBkD,YAAalD,EAAAA,GAAY,IACzBmD,MAAO,KAGX/E,EAAasE,QAAUC,EACvBN,EAAMO,OAAON,KAAKK,GAGlB,IAAIS,EAAcT,EAAUZ,SAASO,KACnCtC,EAAAA,EAAUY,IAAIc,EAAM,CAClB2B,KAAM,sFACNC,SAAU,GACVC,QAASvD,EAAAA,GAAY,IACrBwD,QAASxD,EAAAA,GAAY,IACrByD,cAAc,EACdC,kBAAmB,MACnBC,UAAW,YAIfhB,EAAUiB,UAAU,SAAU5C,IAC5BoC,EAAY7B,IAAI,WAAoB,GAARP,EAAY,IAI1C2B,EAAUkB,OAAOC,SAAS3C,OAAO,CAC/BJ,YAAa,EACbgD,OAAQ/D,EAAAA,GAAU,WAClBxD,YAAa,GACbwH,cAAe,EACfC,cAAe,kBAIjBtB,EAAUuB,OAAOJ,SAASvC,IAAI,WAAW,GACzCoB,EAAUwB,MAAML,SAASvC,IAAI,WAAW,GAIxCoB,EAAUkB,OAAOC,SAASM,OAAOC,GAAG,SAAUC,IAAQ,IAADC,EACnD,MACMC,GADkC,QAArBD,EAAGD,EAAGjD,OAAOoD,gBAAQ,IAAAF,OAAA,EAAlBA,EAAoBG,aACF/F,SAClCgG,EAAOC,EAAAA,GAAqBD,MAAME,GAAaA,EAAIlG,WAAa6F,IAChEM,EAAmB,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAM9F,MAE3B,IAAIkG,EACAC,EAAQ3F,EAAAA,GAAe4F,cAE3BC,EAAAA,GAAKC,MAAK,WACRD,EAAAA,GAAKE,cAAc/F,EAAAA,IAAgBI,MAAM4F,IAGvChG,EAAAA,GAAeiG,cAAcN,GAAOvF,MAAM8F,IACxC,MACMC,EADgBD,EAAQE,SACFjE,OAE5B,IAAIkE,EAAQ,GACZ,IAAK,IAAI/I,EAAI,EAAGA,EAAI6I,EAAO7I,IAAK,CAC9B,IAAIgJ,EAAMJ,EAAQE,SAAS9I,GAAGiJ,WAAWC,SACzCH,EAAMpD,KAAKqD,EACb,CAEA,IAAIG,EAAW,IAAIC,EAAAA,EAAM,CACvBC,UAAWN,IAGbrG,EAAAA,GAAe4G,YAAYH,GAAUrG,MAAK,SAAUC,GAC9CA,EAAOwG,QACThB,EAAAA,GAAKiB,KAAKzG,EAAOwG,OAErB,IAEInB,GACFA,EAAgBqB,SAElBrB,EAAkBM,EAAUgB,UAAUX,GAEtCR,EAAAA,GAAKb,GAAG,SAAS,WACfgB,EAAUiB,OAAS,IAAIC,EAAAA,EAAc,CACnCC,WAAOC,IAET1B,EAAgBqB,QAClB,GAAE,IAGJf,EAAUiB,OAAS,IAAIC,EAAAA,EAAc,CACnCC,MAAO,YAAc1B,GACrB,GAEN,GAAE,IAGJnC,EAAU+D,KAAKvF,OAAO3C,GAItB,IAAImI,EAAStE,EAAMN,SAASO,KAC1BtC,EAAAA,EAAWY,IAAIc,EAAM,CACnB6B,QAASvD,EAAAA,GAAY,IACrB4G,EAAG5G,EAAAA,GAAY,OAGnB1B,EAAUoE,QAAUiE,EACpBA,EAAOD,KAAKvF,OAAOwB,EAAUkE,WAG7BF,EAAOG,QAAQhD,SAAS3C,OAAO,CAC7BH,MAAO,GACPC,OAAQ,KAIV0F,EAAOI,iBAAiBjD,SAAS3C,OAAO,CACtC6F,eAAgB,GAChBC,eAAgB,GAChBC,eAAgB,GAChBC,eAAgB,KAMlB9E,EAAMuB,UAAU,SAAS,SAAU5C,GAEjC,IAAIoG,EAAiBvK,KAAKwK,IAAIrG,EAAQqB,EAAMpB,SAD3B,SAGjB0F,EAAOzC,OAAOJ,SAAS3C,OAAO,CAC5BH,MAAOoG,EACPE,SAAUF,GAEd,IAiCA,OAvBAT,EAAOzC,OAAOJ,SAAS3C,OAAO,CAC5BuC,kBAAmB,WACnB6D,KAAMvH,EAAAA,GAAU,aAMlB2G,EAAOa,YAAY1D,SAAS3C,OAAO,CACjCwC,UAAW,QACX3C,MAduB,GAevBuG,KAAMvH,EAAAA,GAAU,aAIlB2G,EAAOc,eAAe3D,SAAS3C,OAAO,CAEpCuG,WAAY,IACZC,cAAe,IAGjBhF,EAAUiF,OAAO,IAAM,KAEhB,KACLlG,EAAKG,SAAS,CACf,GACA,CAAC9C,EAASP,KAEbe,EAAAA,EAAAA,YAAU,KAAO,IAADsI,EAAAC,EACM,QAApBD,EAAAzJ,EAAasE,eAAO,IAAAmF,GAApBA,EAAsBnB,KAAKvF,OAAO3C,GACjB,QAAjBsJ,EAAAxJ,EAAUoE,eAAO,IAAAoF,GAAjBA,EAAmBpB,KAAKvF,OAAO/C,EAAasE,QAAQmE,UAAU,KAI9DkB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAjG,SAAA,EAEEkG,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAAAnG,SAAC,sBACdkG,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAAC1F,OAAO,SAAQT,UAC3BgG,EAAAA,EAAAA,MAAA,KAAGlK,UAAU,kBAAiBkE,SAAA,EAC3BoG,EAAAA,EAAAA,IAAqBnJ,EAAgB,KACtCiJ,EAAAA,EAAAA,KAAA,OACEG,IAAI,uDACJC,IAAI,iBACJpH,OAAQ,MACRD,MAAO,MACPsH,MAAO,CAAEC,WAAY,OAAQC,QAAS,OAAQC,UAAW,gBAO/DR,EAAAA,EAAAA,KAAA,OACErG,GAAI7C,EACJuJ,MAAO,CACLrH,OAAQ,OACRyH,gBAAiB,eACjBjI,MAAO,QACPkI,aAAc,UAKlBV,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAAAnG,SAAC,gBACdkG,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAAC1F,OAAO,SAAQT,SACH,IAAvB/C,EAAgB,IACf+I,EAAAA,EAAAA,MAAA,KAAGlK,UAAU,mBAAkBkE,SAAA,CAC5B/C,EAAgB,GAAG,SACpBiJ,EAAAA,EAAAA,KAAA,OACEG,IAAI,iEACJC,IAAI,iBACJpH,OAAQ,MACRD,MAAO,MACPsH,MAAO,CAAEC,WAAY,MAAOC,QAAS,OAAQC,UAAW,cAI5DV,EAAAA,EAAAA,MAAA,KAAGlK,UAAU,mBAAkBkE,SAAA,CAC5B/C,EAAgB,GAAG,OAAImJ,EAAAA,EAAAA,IAAqBnJ,EAAgB,IAAI,KACjEiJ,EAAAA,EAAAA,KAAA,OACEG,IAAI,iEACJC,IAAI,iBACJpH,OAAQ,MACRD,MAAO,MACPsH,MAAO,CAAEC,WAAY,MAAOC,QAAS,OAAQC,UAAW,iBAK/D,G","sources":["../node_modules/src/.internal/core/render/patterns/LinePattern.ts","components/StructureChart.tsx"],"sourcesContent":["import { Pattern, IPatternSettings, IPatternPrivate } from \"./Pattern\";\nimport * as $type from \"../../util//Type\";\n\nexport interface ILinePatternSettings extends IPatternSettings {\n\n\t/**\n\t * Gap between  lines, in pixels.\n\t *\n\t * @default 6\n\t */\n\tgap?: number;\n\n}\n\nexport interface ILinePatternPrivate extends IPatternPrivate {\n}\n\n/**\n * Line pattern.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n */\nexport class LinePattern extends Pattern {\n\n\tdeclare public _settings: ILinePatternSettings;\n\tdeclare public _privateSettings: ILinePatternPrivate;\n\n\tpublic static className: string = \"LinePattern\";\n\tpublic static classNames: Array<string> = Pattern.classNames.concat([LinePattern.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"gap\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tprotected _draw() {\n\t\tsuper._draw();\n\n\t\tconst w = this.get(\"width\", 100);\n\t\tconst h = this.get(\"height\", 100);\n\t\tconst gap = this.get(\"gap\", 0);\n\t\tconst strokeWidth = this.get(\"strokeWidth\", 1);\n\n\t\tif (!gap) {\n\t\t\tthis._display.moveTo(0, 0);\n\t\t\tthis._display.lineTo(w, 0);\n\t\t}\n\t\telse {\n\t\t\tlet step = gap + strokeWidth;\n\t\t\tlet count = h / step;\n\n\t\t\tfor (let i = -count; i < count * 2; i++) {\n\t\t\t\tconst y = Math.round(i * step - step / 2) + 0.5;\n\t\t\t\tthis._display.moveTo(-w, y);\n\t\t\t\tthis._display.lineTo(w * 2, y);\n\t\t\t}\n\t\t}\n\n\t\tthis._display.lineStyle(strokeWidth, this.get(\"color\"), this.get(\"colorOpacity\"));\n\n\t\tlet strokeDasharray = this.get(\"strokeDasharray\");\n\t\tif ($type.isNumber(strokeDasharray)) {\n\t\t\tif (strokeDasharray < 0.5) {\n\t\t\t\tstrokeDasharray = [0];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstrokeDasharray = [strokeDasharray]\n\t\t\t}\n\t\t}\n\t\tthis._display.setLineDash(strokeDasharray as number[]);\n\n\t\tconst strokeDashoffset = this.get(\"strokeDashoffset\");\n\t\tif (strokeDashoffset) {\n\t\t\tthis._display.setLineDashOffset(strokeDashoffset);\n\t\t}\n\n\t\tthis._display.endStroke();\n\t}\n}\n","import { useEffect, useRef, useState, memo } from 'react';\r\nimport { structureLayer } from '../layers';\r\nimport { view } from '../Scene';\r\nimport FeatureFilter from '@arcgis/core/layers/support/FeatureFilter';\r\nimport Query from '@arcgis/core/rest/support/Query';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport * as am5percent from '@amcharts/amcharts5/percent';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport { generateStrucNumber, generateStructureData, thousands_separators } from '../Query';\r\n\r\nimport { CalciteLabel } from '@esri/calcite-components-react';\r\nimport { colorStructureHex, statusStructureQuery } from '../StatusUniqueValues';\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\n\r\n///*** Others */\r\n\r\n/// Draw chart\r\nconst StructureChart = memo(({ contractp, landtype, landsection, typelist }: any) => {\r\n  // 1. Structure\r\n  const pieSeriesRef = useRef<unknown | any | undefined>({});\r\n  const legendRef = useRef<unknown | any | undefined>({});\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [structureData, setStructureData] = useState([\r\n    {\r\n      category: String,\r\n      value: Number,\r\n    },\r\n  ]);\r\n\r\n  const chartID = 'structure-chart';\r\n  const [structureNumber, setStructureNumber] = useState([]);\r\n\r\n  // 2.Mode of Acquisition\r\n  const barSeriesRef = useRef<unknown | any | undefined>({});\r\n  const yAxisRef = useRef<unknown | any | undefined>({});\r\n  const chartRef_moa = useRef<unknown | any | undefined>({});\r\n  const chartID_moa = 'structure-moa';\r\n\r\n  // Query\r\n  // Query\r\n  const qCP = \"Package = '\" + contractp + \"'\";\r\n  const qLandType = \"Type = '\" + landtype + \"'\";\r\n  const qCpLandType = qCP + ' AND ' + qLandType;\r\n  const qLandSection = \"Station1 ='\" + landsection + \"'\";\r\n  const qCpLandTypeSection = qCpLandType + ' AND ' + qLandSection;\r\n\r\n  if (!contractp) {\r\n    structureLayer.definitionExpression = '1=1';\r\n  } else if (contractp && !landtype && !landsection) {\r\n    structureLayer.definitionExpression = qCP;\r\n  } else if (contractp && landtype && !landsection) {\r\n    structureLayer.definitionExpression = qCpLandType;\r\n  } else {\r\n    structureLayer.definitionExpression = qCpLandTypeSection;\r\n  }\r\n\r\n  useEffect(() => {\r\n    generateStructureData(contractp, landtype, landsection).then((result: any) => {\r\n      setStructureData(result);\r\n    });\r\n\r\n    // Structure Number\r\n    generateStrucNumber().then((response: any) => {\r\n      setStructureNumber(response);\r\n    });\r\n  }, [contractp, landtype, landsection]);\r\n\r\n  useEffect(() => {\r\n    class MyTheme extends am5.Theme {\r\n      patterns: am5.LinePattern[] | undefined | any;\r\n      currentPattern: number | any | undefined;\r\n      setupDefaultRules() {\r\n        var theme = this;\r\n\r\n        const gap = 4;\r\n        const rotation = 135;\r\n        const strokeWidth = 1.1;\r\n        const fillOpacity = 0;\r\n        const width = 10;\r\n        const height = 10;\r\n\r\n        const patterns = colorStructureHex.map((color: any, index: any) => {\r\n          return Object.assign(\r\n            am5.LinePattern.new(this._root, {\r\n              color: am5.color(color),\r\n              gap: gap,\r\n              rotation: rotation,\r\n              strokeWidth: strokeWidth,\r\n              fillOpacity: fillOpacity,\r\n              width: width,\r\n              height: height,\r\n            }),\r\n          );\r\n        });\r\n\r\n        this.patterns = patterns;\r\n\r\n        this.currentPattern = 0;\r\n        this.rule('Slice').setAll({\r\n          fillOpacity: 0,\r\n        });\r\n\r\n        this.rule('Slice').setup = function (target) {\r\n          target.set('fillPattern', theme.patterns[theme.currentPattern]);\r\n          theme.currentPattern++;\r\n          if (theme.currentPattern === theme.patterns?.length) {\r\n            theme.currentPattern = 0;\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    maybeDisposeRoot(chartID);\r\n\r\n    var root = am5.Root.new(chartID);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    root.setThemes([\r\n      am5themes_Animated.new(root),\r\n      am5themes_Responsive.new(root),\r\n      MyTheme.new(root),\r\n    ]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\r\n    var chart = root.container.children.push(\r\n      am5percent.PieChart.new(root, {\r\n        layout: root.verticalLayout,\r\n      }),\r\n    );\r\n    chartRef.current = chart;\r\n\r\n    // Create series\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\r\n    var pieSeries = chart.series.push(\r\n      am5percent.PieSeries.new(root, {\r\n        name: 'Series',\r\n        categoryField: 'category',\r\n        valueField: 'value',\r\n        //legendLabelText: \"[{fill}]{category}[/]\",\r\n        legendValueText: \"{valuePercentTotal.formatNumber('#.')}% ({value})\",\r\n        radius: am5.percent(45), // outer radius\r\n        innerRadius: am5.percent(28),\r\n        scale: 2,\r\n      }),\r\n    );\r\n    pieSeriesRef.current = pieSeries;\r\n    chart.series.push(pieSeries);\r\n\r\n    // values inside a donut\r\n    let inner_label = pieSeries.children.push(\r\n      am5.Label.new(root, {\r\n        text: '[#ffffff]{valueSum}[/]\\n[fontSize: 7px; #d3d3d3; verticalAlign: super]STRUCTURES[/]',\r\n        fontSize: 15,\r\n        centerX: am5.percent(50),\r\n        centerY: am5.percent(40),\r\n        populateText: true,\r\n        oversizedBehavior: 'fit',\r\n        textAlign: 'center',\r\n      }),\r\n    );\r\n\r\n    pieSeries.onPrivate('width', (width: any) => {\r\n      inner_label.set('maxWidth', width * 0.7);\r\n    });\r\n\r\n    // Set slice opacity and stroke color\r\n    pieSeries.slices.template.setAll({\r\n      fillOpacity: 0,\r\n      stroke: am5.color('#ffffff'),\r\n      strokeWidth: 0.7,\r\n      strokeOpacity: 1,\r\n      templateField: 'sliceSettings',\r\n    });\r\n\r\n    // Disabling labels and ticksll\r\n    pieSeries.labels.template.set('visible', false);\r\n    pieSeries.ticks.template.set('visible', false);\r\n\r\n    // EventDispatcher is disposed at SpriteEventDispatcher...\r\n    // It looks like this error results from clicking events\r\n    pieSeries.slices.template.events.on('click', (ev) => {\r\n      const selected: any = ev.target.dataItem?.dataContext;\r\n      const categorySelect: string = selected.category;\r\n      const find = statusStructureQuery.find((emp: any) => emp.category === categorySelect);\r\n      const statusSelect = find?.value;\r\n\r\n      var highlightSelect: any;\r\n      var query = structureLayer.createQuery();\r\n\r\n      view.when(function () {\r\n        view.whenLayerView(structureLayer).then((layerView): any => {\r\n          //chartLayerView = layerView;\r\n\r\n          structureLayer.queryFeatures(query).then((results: any) => {\r\n            const RESULT_LENGTH = results.features;\r\n            const ROW_N = RESULT_LENGTH.length;\r\n\r\n            let objID = [];\r\n            for (var i = 0; i < ROW_N; i++) {\r\n              var obj = results.features[i].attributes.OBJECTID;\r\n              objID.push(obj);\r\n            }\r\n\r\n            var queryExt = new Query({\r\n              objectIds: objID,\r\n            });\r\n\r\n            structureLayer.queryExtent(queryExt).then(function (result) {\r\n              if (result.extent) {\r\n                view.goTo(result.extent);\r\n              }\r\n            });\r\n\r\n            if (highlightSelect) {\r\n              highlightSelect.remove();\r\n            }\r\n            highlightSelect = layerView.highlight(objID);\r\n\r\n            view.on('click', function () {\r\n              layerView.filter = new FeatureFilter({\r\n                where: undefined,\r\n              });\r\n              highlightSelect.remove();\r\n            });\r\n          }); // End of queryFeatures\r\n\r\n          layerView.filter = new FeatureFilter({\r\n            where: 'Status = ' + statusSelect,\r\n          });\r\n        }); // End of view.whenLayerView\r\n      }); // End of view.whenv\r\n    });\r\n\r\n    pieSeries.data.setAll(structureData);\r\n\r\n    // Legend\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/legend-percent-series/\r\n    var legend = chart.children.push(\r\n      am5.Legend.new(root, {\r\n        centerX: am5.percent(50),\r\n        x: am5.percent(50),\r\n      }),\r\n    );\r\n    legendRef.current = legend;\r\n    legend.data.setAll(pieSeries.dataItems);\r\n\r\n    // Change the size of legend markers\r\n    legend.markers.template.setAll({\r\n      width: 18,\r\n      height: 18,\r\n    });\r\n\r\n    // Change the marker shape\r\n    legend.markerRectangles.template.setAll({\r\n      cornerRadiusTL: 10,\r\n      cornerRadiusTR: 10,\r\n      cornerRadiusBL: 10,\r\n      cornerRadiusBR: 10,\r\n    });\r\n\r\n    // Responsive legend\r\n    // https://www.amcharts.com/docs/v5/tutorials/pie-chart-with-a-legend-with-dynamically-sized-labels/\r\n    // This aligns Legend to Left\r\n    chart.onPrivate('width', function (width: any) {\r\n      const boxWidth = 190; //props.style.width;\r\n      var availableSpace = Math.max(width - chart.height() - boxWidth, boxWidth);\r\n      //var availableSpace = (boxWidth - valueLabelsWidth) * 0.7\r\n      legend.labels.template.setAll({\r\n        width: availableSpace,\r\n        maxWidth: availableSpace,\r\n      });\r\n    });\r\n\r\n    // To align legend items: valueLabels right, labels to left\r\n    // 1. fix width of valueLabels\r\n    // 2. dynamically change width of labels by screen size\r\n\r\n    const valueLabelsWidth = 50;\r\n\r\n    // Change legend labelling properties\r\n    // To have responsive font size, do not set font size\r\n    legend.labels.template.setAll({\r\n      oversizedBehavior: 'truncate',\r\n      fill: am5.color('#ffffff'),\r\n      //textDecoration: \"underline\"\r\n      //width: am5.percent(200)\r\n      //fontWeight: \"300\"\r\n    });\r\n\r\n    legend.valueLabels.template.setAll({\r\n      textAlign: 'right',\r\n      width: valueLabelsWidth,\r\n      fill: am5.color('#ffffff'),\r\n      //fontSize: LEGEND_FONT_SIZE,\r\n    });\r\n\r\n    legend.itemContainers.template.setAll({\r\n      // set space between legend items\r\n      paddingTop: 1.1,\r\n      paddingBottom: 2,\r\n    });\r\n\r\n    pieSeries.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID, structureData]);\r\n\r\n  useEffect(() => {\r\n    pieSeriesRef.current?.data.setAll(structureData);\r\n    legendRef.current?.data.setAll(pieSeriesRef.current.dataItems);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* Total Structure Number */}\r\n      <CalciteLabel>TOTAL STRUCTURES</CalciteLabel>\r\n      <CalciteLabel layout=\"inline\">\r\n        <b className=\"totalLotsNumber\">\r\n          {thousands_separators(structureNumber[2])}\r\n          <img\r\n            src=\"https://EijiGorilla.github.io/Symbols/House_Logo.svg\"\r\n            alt=\"Structure Logo\"\r\n            height={'35%'}\r\n            width={'35%'}\r\n            style={{ marginLeft: '155%', display: 'flex', marginTop: '-25%' }}\r\n          />\r\n          {/* <div className=\"totalLotsNumber2\">({thousands_separators(structureNumber[2])})</div>{' '} */}\r\n        </b>\r\n      </CalciteLabel>\r\n\r\n      {/* Structure Chart */}\r\n      <div\r\n        id={chartID}\r\n        style={{\r\n          height: '45vh',\r\n          backgroundColor: 'rgb(0,0,0,0)',\r\n          color: 'white',\r\n          marginBottom: '10%',\r\n        }}\r\n      ></div>\r\n\r\n      {/* Demolished number */}\r\n      <CalciteLabel>DEMOLISHED</CalciteLabel>\r\n      <CalciteLabel layout=\"inline\">\r\n        {structureNumber[1] === 0 ? (\r\n          <b className=\"DemolishedNumber\">\r\n            {structureNumber[0]}% (0)\r\n            <img\r\n              src=\"https://EijiGorilla.github.io/Symbols/Structure_Demolished.svg\"\r\n              alt=\"Structure Logo\"\r\n              height={'15%'}\r\n              width={'15%'}\r\n              style={{ marginLeft: '70%', display: 'flex', marginTop: '-10%' }}\r\n            />\r\n          </b>\r\n        ) : (\r\n          <b className=\"DemolishedNumber\">\r\n            {structureNumber[0]}% ({thousands_separators(structureNumber[1])})\r\n            <img\r\n              src=\"https://EijiGorilla.github.io/Symbols/Structure_Demolished.svg\"\r\n              alt=\"Structure Logo\"\r\n              height={'18%'}\r\n              width={'18%'}\r\n              style={{ marginLeft: '70%', display: 'flex', marginTop: '-10%' }}\r\n            />\r\n          </b>\r\n        )}\r\n      </CalciteLabel>\r\n    </>\r\n  );\r\n}); // End of lotChartgs\r\n\r\nexport default StructureChart;\r\n"],"names":["LinePattern","Pattern","_beforeChanged","super","this","isDirty","_clear","_draw","w","get","h","gap","strokeWidth","step","count","i","y","Math","round","_display","moveTo","lineTo","lineStyle","strokeDasharray","$type","setLineDash","strokeDashoffset","setLineDashOffset","endStroke","Object","defineProperty","classNames","concat","className","memo","_ref","contractp","landtype","landsection","typelist","pieSeriesRef","useRef","legendRef","chartRef","structureData","setStructureData","useState","category","String","value","Number","chartID","structureNumber","setStructureNumber","qCP","qCpLandType","qCpLandTypeSection","structureLayer","definitionExpression","useEffect","generateStructureData","then","result","generateStrucNumber","response","_root$_logo","divId","MyTheme","am5","constructor","arguments","patterns","currentPattern","setupDefaultRules","theme","colorStructureHex","map","color","index","assign","new","_root","rotation","fillOpacity","width","height","rule","setAll","setup","target","_theme$patterns","set","length","rootElements","root","dom","id","dispose","container","children","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","chart","push","am5percent","layout","verticalLayout","current","pieSeries","series","name","categoryField","valueField","legendValueText","radius","innerRadius","scale","inner_label","text","fontSize","centerX","centerY","populateText","oversizedBehavior","textAlign","onPrivate","slices","template","stroke","strokeOpacity","templateField","labels","ticks","events","on","ev","_ev$target$dataItem","categorySelect","dataItem","dataContext","find","statusStructureQuery","emp","statusSelect","highlightSelect","query","createQuery","view","when","whenLayerView","layerView","queryFeatures","results","ROW_N","features","objID","obj","attributes","OBJECTID","queryExt","Query","objectIds","queryExtent","extent","goTo","remove","highlight","filter","FeatureFilter","where","undefined","data","legend","x","dataItems","markers","markerRectangles","cornerRadiusTL","cornerRadiusTR","cornerRadiusBL","cornerRadiusBR","availableSpace","max","maxWidth","fill","valueLabels","itemContainers","paddingTop","paddingBottom","appear","_pieSeriesRef$current","_legendRef$current","_jsxs","_Fragment","_jsx","CalciteLabel","thousands_separators","src","alt","style","marginLeft","display","marginTop","backgroundColor","marginBottom"],"sourceRoot":""}